{"version":3,"file":"static/js/929.c8984737.chunk.js","mappings":"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","sources":["webpack://react-homework-5/./src/components/ButtonMore/ButtonMore.module.css?ad63","components/ButtonMore/ButtonMore.js","webpack://react-homework-5/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","webpack://react-homework-5/./src/pages/Home/Home.module.css?1370","pages/Home/Home.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ButtonMore_container__VI2bK\",\"button\":\"ButtonMore_button__YPyE-\"};","import React from 'react';\nimport css from './ButtonMore.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ButtonLoadMore = ({ getLoadMore }) => {\n  return (\n    <div className={css.container}>\n      <button type=\"button\" className={css.button} onClick={getLoadMore}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButtonLoadMore.propTypes = {\n  getLoadMore: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"moviesItem\":\"MoviesList_moviesItem__r+0sq\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"rating\":\"MoviesList_rating__kpX1I\"};","import { Loader } from 'components/Loader/Loader';\nimport { Suspense } from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nimport defaultPoster from 'No_image_poster.png';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.moviesList}>\n      {movies?.map(({ id, poster_path, original_title, vote_average }) => (\n        <li key={`${id}${Date.now()}`} className={css.moviesItem}>\n          <NavLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPoster\n              }\n              alt={original_title}\n            />\n            <p className={css.movieTitle}>{original_title}</p>\n          </NavLink>\n          <div className={css.rating}> {vote_average.toFixed(1)}</div>\n        </li>\n      ))}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Title\":\"Home_Title__zLKc5\"};","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { getTrending } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport css from './Home.module.css';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { ButtonLoadMore } from 'components/ButtonMore/ButtonMore';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    const getTrendingFilms = async () => {\n      try {\n        setIsLoading(true);\n        const { results, total_pages } = await getTrending(page);\n        if (results.length === 0) {\n          toast.error('Error! Nothing found. Please use another query');\n          return;\n        }\n        setMovies(prevState => {\n          return [...prevState, ...results];\n        });\n        setTotalPages(total_pages);\n      } catch (error) {\n        toast.error('Error! Please try again');\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendingFilms();\n  }, [page]);\n\n  const getLoadMore = totalPages => {\n    page < totalPages && setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      <h1 className={css.Title}>Trending today</h1>\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {page < totalPages && (\n        <ButtonLoadMore getLoadMore={() => getLoadMore(totalPages)} />\n      )}\n      {isLoading && <Loader />}\n      <Toaster />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst AUTH_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyY2Y4OTAwMmU5YzMyYzNmMDhkZGFhMGQ5ZDBkNTEwMCIsInN1YiI6IjYzNWMzNTkxZjI4ODM4MDA5YmQwMzg4NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fIKN_YBMgtp3274NYKbPzwIncyl81UfUTer5bLs5jLo';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = `Bearer ${AUTH_TOKEN}`;\n\nexport const getTrending = async page => {\n  const { data } = await axios.get(\n    `trending/movie/week?page=${page}&language=en-US`\n  );\n  return data;\n};\n\nexport const getOneMovie = async id => {\n  const { data } = await axios.get(`movie/${id}?language=en-US`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const { data } = await axios.get(\n    `search/movie?language=en-US&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getCastMovie = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nexport const getReviewsMovie = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?language=en-US&page=1`);\n  return data;\n};\n"],"names":["ButtonLoadMore","getLoadMore","className","css","type","onClick","MoviesList","movies","location","useLocation","map","id","poster_path","original_title","vote_average","to","state","from","src","defaultPoster","alt","toFixed","Date","now","Suspense","fallback","Loader","useState","isLoading","setIsLoading","setMovies","page","setPage","totalPages","setTotalPages","useEffect","getTrendingFilms","getTrending","results","total_pages","length","toast","prevState","console","log","axios","data","getOneMovie","getSearchMovies","query","getCastMovie","getReviewsMovie"],"sourceRoot":""}