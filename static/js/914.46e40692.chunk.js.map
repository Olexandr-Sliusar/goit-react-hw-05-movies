{"version":3,"file":"static/js/914.46e40692.chunk.js","mappings":"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","sources":["webpack://react-homework-5/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieDetails_backLink__dzd-p\",\"linkInfo\":\"MovieDetails_linkInfo__CGpXD\",\"active\":\"MovieDetails_active__uPNdW MovieDetails_linkInfo__CGpXD\",\"linksWrapper\":\"MovieDetails_linksWrapper__eRALp\",\"wraper\":\"MovieDetails_wraper__LBLaL\",\"descripton\":\"MovieDetails_descripton__vTskP\",\"poster\":\"MovieDetails_poster__yO7gD\",\"genres\":\"MovieDetails_genres__Pnmgt\"};","import { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { NotFound } from 'pages/NotFound/NotFound';\nimport { getOneMovie } from 'services/api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [msg, setMsg] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const gethMovie = async () => {\n      try {\n        setIsLoading(true);\n        const result = await getOneMovie(movieId);\n        setMovie(result);\n      } catch (error) {\n        console.log(error);\n        setMsg(<NotFound />);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    gethMovie();\n  }, [movieId]);\n  if (msg) return msg;\n\n  if (!movie) return;\n\n  const {\n    original_title,\n    poster_path,\n    overview,\n    release_date,\n    vote_average,\n    vote_count,\n    genres,\n    revenue,\n    runtime,\n    budget,\n  } = movie;\n\n  const date = new Date(release_date);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <Link to={backLinkLocationRef.current} className={css.backLink}>\n        Back to Movies\n      </Link>\n\n      <div className={css.wraper}>\n        <img\n          className={css.poster}\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={original_title}\n        />\n\n        <div className={css.descripton}>\n          <h2>\n            {original_title} [{date.getFullYear()}]\n          </h2>\n          <ul className={css.genres}>\n            {genres?.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n          <p>\n            <b>Rating:</b> {vote_average.toFixed(1)}\n          </p>\n          <p>\n            <b>Votes: </b>\n            {new Intl.NumberFormat('ru').format(vote_count)}\n          </p>\n          <p>\n            <b>Release date: </b>\n            {release_date}\n          </p>\n          <p>\n            <b>Runtime: </b>\n            {runtime} min.\n          </p>\n          <p>\n            <b> budget: </b>\n            {budget > 0\n              ? `${new Intl.NumberFormat('ru').format(budget)}$`\n              : '--'}\n          </p>\n\n          <p>\n            <b>Revenue: </b>\n            {revenue > 0\n              ? `${new Intl.NumberFormat('ru').format(revenue)}$`\n              : '--'}\n          </p>\n          <p>\n            <b> Overview:</b>\n          </p>\n          <p>{overview}</p>\n\n          <div className={css.linksWrapper}>\n            <NavLink\n              className={({ isActive }) =>\n                isActive ? css.active : css.linkInfo\n              }\n              to=\"cast\"\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              className={({ isActive }) =>\n                isActive ? css.active : css.linkInfo\n              }\n              to=\"reviews\"\n            >\n              Reviews\n            </NavLink>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst AUTH_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyY2Y4OTAwMmU5YzMyYzNmMDhkZGFhMGQ5ZDBkNTEwMCIsInN1YiI6IjYzNWMzNTkxZjI4ODM4MDA5YmQwMzg4NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fIKN_YBMgtp3274NYKbPzwIncyl81UfUTer5bLs5jLo';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = `Bearer ${AUTH_TOKEN}`;\n\nexport const getTrending = async page => {\n  const { data } = await axios.get(\n    `trending/movie/week?page=${page}&language=en-US`\n  );\n  return data;\n};\n\nexport const getOneMovie = async id => {\n  const { data } = await axios.get(`movie/${id}?language=en-US`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const { data } = await axios.get(\n    `search/movie?language=en-US&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getCastMovie = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nexport const getReviewsMovie = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?language=en-US&page=1`);\n  return data;\n};\n"],"names":["useState","movie","setMovie","msg","setMsg","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","gethMovie","getOneMovie","result","console","log","NotFound","original_title","poster_path","overview","release_date","vote_average","vote_count","genres","revenue","runtime","budget","date","Date","Loader","to","current","className","css","src","alt","getFullYear","map","id","name","toFixed","Intl","NumberFormat","format","isActive","Suspense","fallback","axios","getTrending","page","data","getSearchMovies","query","getCastMovie","getReviewsMovie"],"sourceRoot":""}